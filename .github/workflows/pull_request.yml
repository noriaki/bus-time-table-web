on: pull_request

name: Test and Deploy (Staging)

jobs:
  filter_opened_or_synchronize:
    name: Filter opened or synchronize
    runs-on: ubuntu-latest

    steps:
    - name: Filter opened or synchronize
      uses: actions/bin/filter@3c0b4f0
      with:
        args: "action 'opened|synchronize'"

  test:
    name: CI Test
    runs-on: ubuntu-latest
    needs: filter_opened_or_synchronize

    steps:
    - uses: actions/checkout@v1
      with:
        fetch-depth: 1

    - name: Setup node.js
      uses: actions/setup-node@v1
      with:
        node-version: 10.x

    - name: Install Yarn-pkg
      run: npm install -g yarn

    - name: "[INFO] Versions"
      run: |
        echo "node: `node --version`"
        echo "npm:  v`npm --version`"
        echo "yarn: v`yarn --version`"

    - name: Install packages
      run: >
        yarn install
        --frozen-lockfile
        --ignore-optional
        --no-progress
        --non-interactive

    - name: Test
      run: TZ="Asia/Tokyo" yarn test

  deploy_to_zeit_now_staging:
    name: Deploy and Alias with PR number
    runs-on: ubuntu-latest
    needs: test

    steps:
    - uses: actions/checkout@v1
      with:
        fetch-depth: 1

    - name: Deploy for staging
      uses: actions/zeit-now@5c51b26
      env:
        ZEIT_TOKEN: ${{ secrets.ZEIT_TOKEN }}
      with:
        args: >
          deploy
          --local-config=./now-staging.json
          --build-env NODE_ENV=production
          --env NODE_ENV=production
          --target=production
          --public
          --no-clipboard
          > ${HOME}/deployment-url.txt

    - name: Alias with PR number
      uses: actions/zeit-now@5c51b26
      env:
        ZEIT_TOKEN: ${{ secrets.ZEIT_TOKEN }}
      with:
        args: >
          alias
          `cat ${HOME}/deployment-url.txt`
          ${{ github.event.repository.name }}-pr-${{ github.event.number }}.now.sh

  post_review_app_url:
    name: Post review app URL when PR opened
    runs-on: ubuntu-latest
    needs: deploy_to_zeit_now_staging

    steps:
    - name: Post review app URL to the GitHub API
      if: github.event_name == 'pull_request' && github.event.action == 'opened'
      run: >
        curl
        -X POST
        -H "Authorization: token $GITHUB_TOKEN"
        -H "Accept: application/vnd.github.v3+json"
        --data "{ \"body\": \"Review-App was deployed.\nhttps://${{ github.event.repository.name }}-pr-${{ github.event.number }}.now.sh\" }"
        ${{ github.event.pull_request.comments_url }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
